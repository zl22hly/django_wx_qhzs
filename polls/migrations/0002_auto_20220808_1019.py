# Generated by Django 3.2.13 on 2022-08-08 10:19

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('polls', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='park',
            name='ParkLevel',
            field=models.CharField(choices=[(1, '国家级自然保护区'), (2, '省级自然保护区'), (3, '国家湿地公园'), (4, '省级湿地公园'), (5, '湿地保护区(小区)'), (6, '省级小微湿地')], max_length=20, verbose_name='级别划分'),
        ),
        migrations.AlterField(
            model_name='park',
            name='area',
            field=models.CharField(choices=[(1, '鄂东北'), (2, '鄂东南'), (3, '鄂西南'), (4, '鄂西北'), (5, '江汉平原')], max_length=20, verbose_name='片区'),
        ),
        migrations.AlterField(
            model_name='park',
            name='city',
            field=models.CharField(choices=[(1, '武汉'), (2, '鄂州'), (3, '黄冈'), (4, '黄石'), (5, '咸宁'), (6, '孝感'), (7, '随州'), (8, '荆门'), (9, '荆州'), (10, '襄阳'), (11, '宜昌'), (12, '十堰'), (13, '恩施'), (14, '神农架'), (15, '天门'), (16, '潜江'), (17, '仙桃')], max_length=10, verbose_name='市'),
        ),
        migrations.AlterField(
            model_name='park',
            name='initiate',
            field=models.CharField(choices=[(1, '2000以前'), (2, '2000 - 2005'), (3, '2006 - 2010'), (4, '2011 - 2015'), (5, '2016 - 2020'), (6, '2021至今')], max_length=60, verbose_name='加入时间'),
        ),
        migrations.AlterField(
            model_name='park',
            name='mapLevel',
            field=models.IntegerField(choices=[(1, 15), (2, 16), (3, 17), (4, 18)], verbose_name='最佳级别'),
        ),
        migrations.AlterField(
            model_name='park',
            name='naturalLevel',
            field=models.CharField(choices=[(1, '国际重要湿地'), (2, '国家重要湿地'), (3, '省级重要湿地'), (4, '重要湿地')], max_length=20, verbose_name='自然级别'),
        ),
        migrations.AlterField(
            model_name='park',
            name='province',
            field=models.CharField(choices=[(1, '湖北省')], max_length=10, verbose_name='省'),
        ),
        migrations.CreateModel(
            name='HomeIMGData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homeURL', models.CharField(max_length=60, verbose_name='首页外链')),
                ('homeIMG', models.CharField(max_length=60, verbose_name='图片')),
                ('homeTitle', models.CharField(max_length=60, verbose_name='图片标题')),
                ('fatherPark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.homedata', verbose_name='轮播')),
            ],
            options={
                'verbose_name': '轮播',
                'verbose_name_plural': '轮播',
                'db_table': 'sd_homeIMGData',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'tb_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
